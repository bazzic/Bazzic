<?php

/**
 * Implements hook_views_api().
 */
function osn_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'osn'),
  );
}

/**
 * Implements hook_form_alter().
 */
function osn_form_alter(&$form, $form_state, $form_id) {  
  global $user;
  
  if ($user->uid == 0 || ($user->uid != 1 && $user->name != 'sitemanager')) {
    unset($form['options']['promote']);
    unset($form['options']['sticky']);
  }
  
  if ($form_id == 'views_exposed_form') {
  	$form['group']['#size'] = 9;
  	$form['field_event_date_value']['value']['#date_format'] = 'd-m-Y';
  }
  
  if ($form_id == 'event_node_form') {
  	$form['field_location_tid']['und']['#size'] = 9;
    // Don't even ask why this fixes the Safari bug that won't show the background color on submit buttons.
  	print '&nbsp';
    $form['field_link']['und']['add_more']['#value'] = 'Add another weblink';
    $form['field_event_date']['und']['add_more']['#value'] = 'Add another date';
    // We are reusing the promote checkbox to actually remove items from the home page.  If you see the filter in
    // the home page view and are confused by it, this is why.
    $form['options']['promote']['#title'] = 'Remove from home page';
    drupal_set_title('Add Event');
  }
  
  if ($form_id == 'user_register_form') {
  	$form['some_text'] = array(
        '#type' => 'item',
        '#markup' => "<p><b>Only register on this site if you'd like to add art organisations and events.</b></p>",
        '#weight' => -10,
    );
    asort($form['group_audience']['und']['#options']);
    $form['group_audience']['und']['#size'] = 9;
    $form['group_audience']['und']['#options'][0] = 'Group not listed yet';
  	$form['group_audience']['und']['#title'] = 'Group';
  	$form['account']['name']['#description'] = 'Spaces are allowed; punctuation is not allowed except for full stops, hyphens, apostrophes, and underscores.';
    $form['account']['mail']['#description'] = 'A valid e-mail address. All e-mails from the system will be sent to this address. The e-mail address is not made public.';
  }
  
  if (($form_id == 'event_node_form' || $form_id == 'user_profile_form') && !empty($form['group_audience'])) {
  	if (isset($form['group_audience']['und']['#options']['Other groups'])) {
      asort($form['group_audience']['und']['#options']['Other groups']);
  	}
    if (isset($form['group_audience']['und']['#options']['My groups'])) {
      asort($form['group_audience']['und']['#options']['My groups']);
    }
    $form['group_audience']['und']['#title'] = 'Group';
    $form['group_audience']['und']['#size'] = 9;
  }
  
  if ($form_id == 'organisation_node_form') {
  	$form['field_location_tid']['und']['#size'] = 9;
  	$form['some_text'] = array(
        '#type' => 'item',
        '#markup' => "<p><b>When your organisation shows as published on this site you will be able to post events</b></p>",
        '#weight' => -10,
    );
  	// Don't even ask why this fixes the Safari bug that won't show the background color on submit buttons.
    print '&nbsp';
  	unset($form['group_group']);
  	unset($form['group_register']);
  	$form['field_link']['und']['add_more']['#value'] = 'Add another weblink';
  	drupal_set_title('Add Organisation');
  }
}

/**
 * Implements hook_og_membership_insert().
 * This sets the membership to pending after a user registers for an organisation.
 */
function osn_og_membership_insert($og_membership) {
  global $user;
  if ($user->uid == 0 || $user->name != 'sitemanager') {
    db_update('og_membership') // Table name no longer needs {}
        ->fields(array(
            'state' => '2',
        ))
        ->condition('id', $og_membership->id)
        ->execute();
  }
}

/**
 * Implements hook_user_view().
 * This puts the og_user_groups view on the user's account page and displays all organisations for the sitemanager.
 */
function osn_user_view($account, $view_mode, $langcode) {
  $my_orgs = views_embed_view('og_user_groups', 'page_1');
  $all_orgs = views_embed_view('og_user_groups', 'page_2');
  $account->content['organisations'] =  array(
    '#title' => '',
    '#type' => 'user_profile_item',
    '#markup' => $account->name == 'sitemanager' ? $all_orgs : $my_orgs,
  );
}

/**
 * Implements hook_node_access().
 */
function osn_node_access($node, $op, $account) {
  // This removes delete permissions in organisations for everyone except sitemanager.
  if ($op == 'delete' && is_object($node) && $node->type == 'organisation' && $account->name != 'sitemanager') {
  	return NODE_ACCESS_DENY;
  }
  
  // This allows access to the org_admin_page for any org admin.
  if ((is_object($node) && $node->type == 'org_admin_page' || $node == 'org_admin_page') && is_org_admin($account->uid)) {
  	return NODE_ACCESS_ALLOW;
  }
  
  // This allows access to the member_page for any member.
  if ((is_object($node) && $node->type == 'member_page' || $node == 'member_page') && is_member($account->uid)) {
    return NODE_ACCESS_ALLOW;
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 * This removes the activity stream tab from the user edit screen for authenticated users that are not group admins.
 */
function osn_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  global $user;
  if ($user->uid != 0) {
    if (!is_org_admin($user->uid) && $user->uid != 1 && $user->name != 'sitemanager') {
      unset($data['tabs'][1]);
    }
  }
}

function is_org_admin($uid) {
  return db_query("SELECT * FROM {og_users_roles} WHERE uid=:uid AND rid=3", array (':uid' => $uid))->fetchField();
}

function is_member($uid) {
  return db_query("SELECT * FROM {og_membership} WHERE etid=:uid AND entity_type='user'", array (':uid' => $uid))->fetchField();
}





